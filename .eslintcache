[{"D:\\Web Projects\\inventory\\src\\index.js":"1","D:\\Web Projects\\inventory\\src\\App.js":"2","D:\\Web Projects\\inventory\\src\\pages\\index.js":"3","D:\\Web Projects\\inventory\\src\\pages\\order.js":"4","D:\\Web Projects\\inventory\\src\\store\\actions.js":"5","D:\\Web Projects\\inventory\\src\\store\\reducers\\billingItemsReducer.js":"6","D:\\Web Projects\\inventory\\src\\store\\reducers\\filteredItemsReducer.js":"7","D:\\Web Projects\\inventory\\src\\pages\\SignUpPage.js":"8","D:\\Web Projects\\inventory\\src\\pages\\SignInPage.js":"9","D:\\Web Projects\\inventory\\src\\components\\archive\\Navigator.js":"10","D:\\Web Projects\\inventory\\src\\store\\authActions.js":"11","D:\\Web Projects\\inventory\\src\\store\\actions\\index.js":"12","D:\\Web Projects\\inventory\\src\\store\\actions\\auth.js":"13","D:\\Web Projects\\inventory\\src\\store\\actions\\actionTypes.js":"14","D:\\Web Projects\\inventory\\src\\components\\shared\\QtyButton.js":"15","D:\\Web Projects\\inventory\\src\\components\\Layout\\Layout.js":"16","D:\\Web Projects\\inventory\\src\\hoc\\Auxx.js":"17","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageItems.js":"18","D:\\Web Projects\\inventory\\src\\components\\Order\\Searchbar.js":"19","D:\\Web Projects\\inventory\\src\\components\\shared\\Sidebar.js":"20","D:\\Web Projects\\inventory\\src\\components\\Order\\MenuItems.js":"21","D:\\Web Projects\\inventory\\src\\components\\Auth\\signup.js":"22","D:\\Web Projects\\inventory\\src\\components\\shared\\HeaderNav.js":"23","D:\\Web Projects\\inventory\\src\\components\\Order\\Billing.js":"24","D:\\Web Projects\\inventory\\src\\components\\Order\\Items.js":"25","D:\\Web Projects\\inventory\\src\\components\\Auth\\login.js":"26","D:\\Web Projects\\inventory\\src\\components\\Auth\\Login.js":"27","D:\\Web Projects\\inventory\\src\\components\\Auth\\Signup.js":"28","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageRestaurants.js":"29","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageOutlets.js":"30","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageEmployees.js":"31","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageCustomers.js":"32","D:\\Web Projects\\inventory\\src\\components\\Layout\\ManageLayout.js":"33"},{"size":844,"mtime":1612362480226,"results":"34","hashOfConfig":"35"},{"size":1328,"mtime":1614347733792,"results":"36","hashOfConfig":"35"},{"size":874,"mtime":1610987196672,"results":"37","hashOfConfig":"35"},{"size":2490,"mtime":1614601873295,"results":"38","hashOfConfig":"35"},{"size":214,"mtime":1613644127308,"results":"39","hashOfConfig":"35"},{"size":1238,"mtime":1612362477165,"results":"40","hashOfConfig":"35"},{"size":548,"mtime":1612426760927,"results":"41","hashOfConfig":"35"},{"size":294,"mtime":1613841281061,"results":"42","hashOfConfig":"35"},{"size":291,"mtime":1613841237085,"results":"43","hashOfConfig":"35"},{"size":4770,"mtime":1614494638207,"results":"44","hashOfConfig":"35"},{"size":285,"mtime":1613403288427,"results":"45","hashOfConfig":"35"},{"size":33,"mtime":1613644279424,"results":"46","hashOfConfig":"35"},{"size":528,"mtime":1613644425501,"results":"47","hashOfConfig":"35"},{"size":339,"mtime":1613644544471,"results":"48","hashOfConfig":"35"},{"size":1010,"mtime":1612623375446,"results":"49","hashOfConfig":"35"},{"size":532,"mtime":1614609551436,"results":"50","hashOfConfig":"35"},{"size":63,"mtime":1613759422707,"results":"51","hashOfConfig":"35"},{"size":12689,"mtime":1614615707186,"results":"52","hashOfConfig":"35"},{"size":2872,"mtime":1614602600126,"results":"53","hashOfConfig":"35"},{"size":9157,"mtime":1614609548596,"results":"54","hashOfConfig":"35"},{"size":3495,"mtime":1614603225049,"results":"55","hashOfConfig":"35"},{"size":6525,"mtime":1613841216462,"results":"56","hashOfConfig":"35"},{"size":4530,"mtime":1614342793865,"results":"57","hashOfConfig":"35"},{"size":5777,"mtime":1613841360276,"results":"58","hashOfConfig":"35"},{"size":4029,"mtime":1614114064728,"results":"59","hashOfConfig":"35"},{"size":5479,"mtime":1613841347351,"results":"60","hashOfConfig":"35"},{"size":5479,"mtime":1613841347351,"results":"61","hashOfConfig":"35"},{"size":6525,"mtime":1614258764550,"results":"62","hashOfConfig":"35"},{"size":9979,"mtime":1614343180755,"results":"63","hashOfConfig":"35"},{"size":10470,"mtime":1614498769219,"results":"64","hashOfConfig":"35"},{"size":13201,"mtime":1614498752810,"results":"65","hashOfConfig":"35"},{"size":12094,"mtime":1614498741877,"results":"66","hashOfConfig":"35"},{"size":1363,"mtime":1614615612327,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1ghwjzr",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web Projects\\inventory\\src\\index.js",[],["146","147"],"D:\\Web Projects\\inventory\\src\\App.js",[],"D:\\Web Projects\\inventory\\src\\pages\\index.js",[],"D:\\Web Projects\\inventory\\src\\pages\\order.js",["148","149"],"D:\\Web Projects\\inventory\\src\\store\\actions.js",[],"D:\\Web Projects\\inventory\\src\\store\\reducers\\billingItemsReducer.js",[],"D:\\Web Projects\\inventory\\src\\store\\reducers\\filteredItemsReducer.js",[],"D:\\Web Projects\\inventory\\src\\pages\\SignUpPage.js",[],"D:\\Web Projects\\inventory\\src\\pages\\SignInPage.js",[],"D:\\Web Projects\\inventory\\src\\components\\archive\\Navigator.js",[],"D:\\Web Projects\\inventory\\src\\store\\authActions.js",[],["150","151"],"D:\\Web Projects\\inventory\\src\\store\\actions\\index.js",[],"D:\\Web Projects\\inventory\\src\\store\\actions\\auth.js",[],"D:\\Web Projects\\inventory\\src\\store\\actions\\actionTypes.js",[],"D:\\Web Projects\\inventory\\src\\components\\shared\\QtyButton.js",["152"],"import React from \"react\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nclass QtyButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n\r\n  handleIncrement = () => {\r\n      this.props.incQuantity(this.props.id);\r\n    // this.setState(state => ({ counter: state.counter + 1 }));\r\n  };\r\n\r\n  handleDecrement = () => {\r\n      this.props.decQuantity(this.props.id);\r\n    // this.setState(state => ({ counter: state.counter - 1 }));\r\n  };\r\n\r\n  render() {   \r\n    return (\r\n      <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n        <Button size=\"small\" onClick={this.handleDecrement} disabled={this.props.counter < 2}>-</Button>\r\n        <Button size=\"small\" disabled>{this.props.counter}</Button>\r\n        <Button size=\"small\" onClick={this.handleIncrement}>+</Button>        \r\n      </ButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QtyButton;","D:\\Web Projects\\inventory\\src\\components\\Layout\\Layout.js",["153"],"D:\\Web Projects\\inventory\\src\\hoc\\Auxx.js",[],"D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageItems.js",["154","155","156","157","158","159","160","161","162"],"D:\\Web Projects\\inventory\\src\\components\\Order\\Searchbar.js",[],"D:\\Web Projects\\inventory\\src\\components\\shared\\Sidebar.js",["163","164","165","166","167","168","169"],"D:\\Web Projects\\inventory\\src\\components\\Order\\MenuItems.js",["170","171","172","173","174","175","176","177"],"D:\\Web Projects\\inventory\\src\\components\\Auth\\signup.js",["178","179","180","181"],"D:\\Web Projects\\inventory\\src\\components\\shared\\HeaderNav.js",["182","183","184","185","186","187","188","189","190","191","192","193","194"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = (theme) => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction HeaderNav(props) {\r\n  const { classes, onDrawerToggle, changeManageToggle } = props;\r\n  const [value, setValue] = React.useState(\"add\");\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    changeManageToggle(newValue);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onDrawerToggle}\r\n                  className={classes.menuButton}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Link className={classes.link} href=\"#\" variant=\"body2\">\r\n                Go to docs\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts • No alerts\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      {/* <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                Authentication\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button className={classes.button} variant=\"outlined\" color=\"inherit\" size=\"small\">\r\n                Web setup\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"transparent\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={value} textColor=\"inherit\" onChange={handleChange}>\r\n          <Tab textColor=\"inherit\" label=\"Add\" value=\"add\" />\r\n          <Tab textColor=\"inherit\" label=\"Edit\" value=\"edit\" />\r\n          {/* <Tab textColor=\"inherit\" label=\"Templates\" />\r\n          <Tab textColor=\"inherit\" label=\"Usage\" /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeaderNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n  changeManageToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(HeaderNav);","D:\\Web Projects\\inventory\\src\\components\\Order\\Billing.js",["195","196","197","198"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from  '../../store/actions'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, withStyles, makeStyles, Button, Divider } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport QtyButton from '../shared/QtyButton';\r\n\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\n\r\nclass Billing extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n  // subtotal = () => {\r\n  //   return this.props.billingItem.reduce((sum, i) => (sum.quantity*sum.price)+(i.quantity*i.price), {quantity: 0, price: 0})\r\n  // }\r\n    render() {\r\n\r\n        // const useStyles = makeStyles({\r\n        //   table: {\r\n        //     minWidth: 650\r\n        //   }\r\n        // })\r\n        // const classes = useStyles();\r\n\r\n        const StyledTableCell = withStyles((theme) => ({\r\n            head: {\r\n              backgroundColor: \"#759cba\",\r\n              // backgroundColor: theme.palette.common.black,\r\n              color: theme.palette.common.white,\r\n            },\r\n            body: {\r\n              fontSize: 13,\r\n              margin: 0,\r\n            },\r\n          }))(TableCell);\r\n          \r\n          const StyledTableRow = withStyles((theme) => ({\r\n            root: {\r\n              '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n              },\r\n            },\r\n          }))(TableRow);\r\n\r\n          const TAX_RATE = 0.07;\r\n          // const price = row.quantity * price\r\n\r\n          var invoiceSubtotal = 0;\r\n          this.props.billingItem.forEach(item => {\r\n            invoiceSubtotal += item.quantity * item.price;\r\n          });\r\n\r\n          // function subtotal(items) {\r\n          //   return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n          // }\r\n\r\n          \r\n          // const invoiceSubtotal = this.subtotal();\r\n\r\n          // const invoiceSubtotal = subtotal(rows);\r\n          const invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\n          const invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\n          \r\n\r\n        return (\r\n            \r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"customized table\" style={{minWidth: 500}}>\r\n                    <TableHead>\r\n                    <TableRow padding=\"none\">\r\n                        <StyledTableCell align=\"left\">Item Name</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">Quantity</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Rate</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Amount</StyledTableCell>                      \r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {this.props.billingItem.map((row) => (\r\n                        <StyledTableRow key={row.id} >\r\n                        <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n\r\n                          <QtyButton incQuantity={this.props.incQuantity} decQuantity={this.props.decQuantity} counter={row.quantity} id={row.id}/>\r\n                         \r\n                          <Button align=\"center\" color=\"secondary\" startIcon={<DeleteIcon />} style={{outline: \"none\"}} onClick={this.props.delBillingItem.bind(this, row.id)}></Button>\r\n                        \r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">{row.price}</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">{row.price * row.quantity}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n\r\n                    <TableRow>\r\n                      <TableCell rowSpan={3} />\r\n                      <TableCell colSpan={2}>Subtotal</TableCell>\r\n                      <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Tax</TableCell>\r\n                      <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n                      <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell colSpan={2}>Total</TableCell>\r\n                      <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n                    </TableRow>\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      billingItem: state.BIR.billingItems\r\n  }\r\n}  \r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      delBillingItem: (id) => dispatch({type: actionTypes.DELETE, id: id}), \r\n      incQuantity: (id) => dispatch({type: actionTypes.INCREMENT, id: id}),\r\n      decQuantity: (id) => dispatch({type: actionTypes.DECREMENT, id: id}), \r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Billing);\r\n\r\n\r\n\r\n\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\n\r\n\r\n// export default function CustomizedTables() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n    \r\n//   );\r\n// }\r\n","D:\\Web Projects\\inventory\\src\\components\\Order\\Items.js",["199","200","201","202","203","204","205","206","207","208"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from  '../../store/actions'\r\nimport { Grid, Container, Paper, Button, Typography } from '@material-ui/core';\r\nimport axios from 'axios'\r\n\r\n\r\nclass Items extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      axios.post(\"http://divyansh.zapto.org:3000/menu/fetchmenu\", { outlet_id : \"ggggggiiiiii\" })\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result.data\r\n            });\r\n          },\r\n          (response) => {console.log(response.data)},\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n        // this.setState({\r\n        //   isLoaded: true,\r\n        //   items:[\r\n        //     {\r\n        //       id: 1,\r\n        //       name: \"mango\",\r\n        //       price : 100\r\n        //     },\r\n        //     {\r\n        //       id: 2,\r\n        //       name: \"masc\",\r\n        //       price : 200\r\n        //     },\r\n        //     {\r\n        //       id: 3,\r\n        //       name: \"macvj\",\r\n        //       price : 500\r\n        //     }\r\n\r\n        //   ]\r\n        // })\r\n    }\r\n\r\n    addItem = (item) => {\r\n      var obj = {id: item.id, name: item.name, quantity:1, price:item.price}\r\n      this.props.addBillingItems(obj)\r\n    }\r\n\r\n    isItemAdded = (id) => {\r\n      return (this.props.billingItems.find(billingItem => billingItem.id == id) != undefined)\r\n    } \r\n\r\n    render() {\r\n\r\n     \r\n\r\n        const itemstyle = {\r\n            backgroundColor: '#fefefe',\r\n            height: 70,\r\n            width: 150,\r\n            outline: 'none',\r\n            overflow: 'none'\r\n        }\r\n\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n          return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n          return <div>Loading...</div>;\r\n        } else {\r\n\r\n\r\n          var filteredItems = items\r\n\r\n          if (this.props.searchValue != \"\" && this.props.searchValue != undefined){\r\n            filteredItems = [...items.filter( item => item.name.toLowerCase().includes(this.props.searchValue.toLowerCase()))]\r\n          }\r\n\r\n          if(this.props.categoryValue != \"\" && this.props.categoryValue != undefined){\r\n            filteredItems = [...filteredItems.filter( item => item.category == this.props.categoryValue )]\r\n          }\r\n          \r\n          return (\r\n            <>  \r\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={3}>                              \r\n                {filteredItems.map(item => (            \r\n                  <Grid item key={item.item_id}>\r\n\r\n                    <Button variant=\"contained\" style={itemstyle} onClick={this.addItem.bind(this, item)} disabled={this.isItemAdded(item.item_id)}>\r\n\r\n                      <Typography nowrap key={item.item_id} variant='button' style={{padding: 'auto', margin: 'auto'}}>\r\n                          {item.item_name}<br></br><Typography variant='subtitle1' style={{color: '#edc65a', fontSize:'12px'}}>{item.price}</Typography>\r\n                      </Typography>\r\n\r\n                    </Button>\r\n\r\n                  </Grid>  \r\n                ))}\r\n              </Grid>\r\n            </>\r\n          );\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    billingItems: state.BIR.billingItems,\r\n    searchValue: state.FIR.searchValue,\r\n    categoryValue: state.FIR.categoryValue\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      addBillingItems: (billingItem) => dispatch({type: actionTypes.ADD, billingItem: billingItem }), \r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Items);\r\n\r\n\r\n\r\n\r\n  \r\n    \r\n  \r\n","D:\\Web Projects\\inventory\\src\\components\\Auth\\login.js",["209","210","211","212"],"D:\\Web Projects\\inventory\\src\\components\\Auth\\Login.js",["213","214","215","216"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { login } from '../store/authActions'\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(12),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 3),\r\n  },\r\n});\r\n\r\nclass Login extends React.Component {\r\n\r\n    state = {\r\n        email: null,\r\n        password: null,\r\n        login: false,\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      this.setState({[event.target.name]: event.target.value});\r\n      console.log(this.state)\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/login',\r\n            data: this.state,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n                if (typeof window !== 'undefined') {\r\n                  const token = response.data.token;\r\n                  localStorage.setItem('jwt-token', token);\r\n                }\r\n                // this.setState({login: true})\r\n            })\r\n            // .then(function (res) {localStorage.setItem('jwt', res.data); console.log(this.state)})\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            });\r\n\r\n      event.preventDefault();\r\n      // this.props.onAuth(this.state.email, this.state.password)\r\n    }\r\n\r\n render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n      {\r\n      !this.state.login ?\r\n        <Container component=\"main\" maxWidth=\"xs\" >\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              login\r\n            </Typography>\r\n    \r\n            <form className={classes.form} onChange={this.handleChange} onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2} align=\"center\" justify=\"center\">\r\n                \r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                  />\r\n                </Grid> */}\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Login\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"/signup\" variant=\"body2\">\r\n                    Don't have an account? Sign up\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        :\r\n        <Container>You are already logged in</Container>\r\n      }\r\n      </>\r\n    );\r\n }\r\n  \r\n}\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password) => dispatch(actions.auth(email, password))\r\n  }\r\n}\r\n  \r\n  export default connect(null, mapDispatchToProps)(withStyles(styles)(Login));","D:\\Web Projects\\inventory\\src\\components\\Auth\\Signup.js",["217","218","219","220"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n});\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        // lastName: '',\r\n        email: '',\r\n        phone_number: '',\r\n        age: null,\r\n        restaurant_name: '',\r\n        password: '',\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      this.setState({[event.target.name]: event.target.value});\r\n      console.log(this.state)\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n      alert('A form was submitted: ' + this.state);\r\n      axios({\r\n        method: 'post',\r\n        url: 'http://divyansh.zapto.org:3000/signup',\r\n        data: this.state,\r\n        headers: {'Content-Type': 'application/json'}\r\n        }).then(function(response) {\r\n          //handle success\r\n          console.log(response)\r\n        })\r\n        .catch(function (response) {\r\n          //handle error\r\n          console.log(response);\r\n        });\r\n  \r\n      event.preventDefault();\r\n  }\r\n\r\n render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n    \r\n            <form className={classes.form} onChange={this.handleChange} onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"name\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                {/* <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                  />\r\n                </Grid> */}\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"phone_number\"\r\n                    label=\"Contact Number\"\r\n                    name=\"phone_number\"\r\n                    autoComplete=\"phone_number\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"age\"\r\n                    name=\"age\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"age\"\r\n                    label=\"Age\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"restaurant_name\"\r\n                    label=\"Restaurant Name\"\r\n                    name=\"restaurant_name\"\r\n                    autoComplete=\"restaurant_name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                  <FormControlLabel\r\n                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                  />\r\n                </Grid> */}\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"/login\" variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      );\r\n }\r\n  \r\n}\r\n\r\nSignUp.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(SignUp);","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageRestaurants.js",["221","222","223","224","225","226","227","228","229","230"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container,\r\n         makeStyles, withStyles, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport Sidebar from '../shared/Sidebar';\r\nimport HeaderNav from '../shared/HeaderNav';\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n    table: {\r\n        // minWidth: 650,\r\n      },\r\n    button1: {\r\n        fontSize: 11,\r\n        backgroundColor: '#4798a8',\r\n        color: 'white',\r\n        margin: theme.spacing(1),\r\n    \r\n        '&:hover,&:focus': {\r\n              backgroundColor: '#396880',\r\n            }, \r\n    },\r\n    button2: {\r\n        fontSize: 11,\r\n        backgroundColor: '#cf4a4a',\r\n        color: 'white',\r\n        margin: theme.spacing(1),\r\n\r\n        '&:hover,&:focus': {\r\n            backgroundColor: '#b53535',\r\n          }, \r\n    }\r\n  });\r\n\r\n\r\nclass ManageRestaurants extends React.Component {\r\n\r\n//   const classes = useStyles();\r\n\r\n    state = {\r\n        restaurantToAdd : {\r\n            restaurant_name: '',\r\n            user_id : \"4fde28c9-5c13-4429-abe0-032137621baf\"\r\n        },\r\n        restaurantToEdit: null,\r\n        restaurantToDelete: null,\r\n        restaurants: [],\r\n        manageToggle: 'add'\r\n    }\r\n\r\n    componentDidMount() {\r\n      axios.post(\"http://divyansh.zapto.org:3000/restaurant/fetchall\", { user_id :\"4fde28c9-5c13-4429-abe0-032137621baf\" })\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              restaurants: result.data\r\n            });\r\n          },\r\n          (response) => {console.log(response.data)},\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n\r\n    changeManageToggle = (manageToggle) => {\r\n        this.setState({ manageToggle : manageToggle })\r\n    }\r\n\r\n\r\n    handleAddChange = (event) => {\r\n        var val = event.target.name !== 'nonVeg' ? event.target.value : event.target.checked; \r\n        var temp = this.state.restaurantToAdd;\r\n        temp[event.target.name] = val\r\n        this.setState({restaurantToAdd: temp});\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleAddSubmit = (e) => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/restaurant/new',\r\n            data: this.state.restaurantToAdd,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n        e.preventDefault();    \r\n    }\r\n\r\n    handleEditState = (restaurantToEdit) => {\r\n        this.setState({restaurantToEdit: restaurantToEdit})\r\n    }\r\n\r\n    handleEditChange = (event) => {\r\n        var val = event.target.value; \r\n        var temp = this.state.restaurantToEdit;\r\n        temp[event.target.name] = val\r\n        this.setState({restaurantToEdit: temp});\r\n        console.log(this.state.restaurantToEdit)\r\n    }\r\n\r\n    handleEditSave = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/restaurant/update',\r\n            data: this.state.restaurantToEdit,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n                alert(JSON.stringify(response.data));\r\n\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n        // e.preventDefault(); \r\n\r\n\r\n        this.setState({restaurantToEdit: null})\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        // console.log(id)\r\n        axios({\r\n            method: 'delete',\r\n            url: `http://divyansh.zapto.org:3000/restaurant/delete/${id}`,\r\n            // data: this.state.itemToEdit,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(response => {\r\n                //handle success\r\n                console.log(response.data);\r\n                this.setState({restaurants: [...this.state.restaurants.filter(restaurant => restaurant.restaurant_id!==id)]})\r\n                // alert(JSON.stringify(response.data));\r\n                return this.state.restaurants;\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n            \r\n    }\r\n\r\n    buttonToggle = (row, classes) => {\r\n        if(this.state.restaurantToEdit != null && this.state.restaurantToEdit.restaurant_id==row.restaurant_id ){\r\n            return(\r\n            <TableRow key={row.restaurant_id} onChange={this.handleEditChange}>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.restaurant_name} name=\"restaurant_name\"/></TableCell>\r\n            <TableCell align=\"left\" style={{width: 250}}>\r\n            <Button variant=\"contained\" size=\"small\" className={classes.button1} startIcon={<SaveIcon />}  onClick={() => {this.handleEditSave()}}>Save</Button>\r\n            <Button variant=\"contained\"  size=\"small\" className={classes.button2} startIcon={<DeleteIcon />} onClick={() => {this.handleDelete(row.restaurant_id)}}>Delete</Button>\r\n            </TableCell>\r\n            </TableRow>\r\n            )\r\n        } else {\r\n            return(\r\n            <TableRow key={row.restaurant_id}>\r\n                    <TableCell align=\"left\">{row.restaurant_name}</TableCell>\r\n                    <TableCell align=\"left\" style={{width: 250}}>\r\n                    <Button variant=\"contained\" size=\"small\" className={classes.button1} startIcon={<SaveIcon />} onClick={() => {this.handleEditState(row)}}>Edit</Button>\r\n                    <Button variant=\"contained\"  size=\"small\" className={classes.button2} startIcon={<DeleteIcon />} onClick={() => {this.handleDelete(row.restaurant_id)}}>Delete</Button>\r\n                    </TableCell>\r\n                </TableRow>)\r\n        }\r\n    }; \r\n  \r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    var content;\r\n\r\n    if (this.state.manageToggle == \"add\"){\r\n        content = \r\n       ( \r\n        <Container maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n            {/* <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar> */}\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Add Restaurant\r\n            </Typography>\r\n\r\n            <form className={classes.form} onChange={this.handleAddChange} onSubmit={this.handleAddSubmit} noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        autoComplete=\"restaurant_name\"\r\n                        name=\"restaurant_name\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"restaurant_name\"\r\n                        label=\"Restaurant Name\"\r\n                        autoFocus\r\n                    />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </form>\r\n        \r\n        </div>\r\n        </Container> )\r\n    }\r\n\r\n    else if(this.state.manageToggle == \"edit\") {\r\n\r\n        \r\n        \r\n        content =\r\n        <TableContainer  component={Paper} style={{maxWidth: 600}}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"left\">Restaurant Name</TableCell>\r\n                        {/* <TableCell align=\"center\">Total Quantity</TableCell> */}\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {this.state.restaurants.map((row) => (\r\n                        this.buttonToggle(row, classes)\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    }\r\n\r\n    else {\r\n        content = <p>Please select Add Item/ Edit Restaurant</p>\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n        <Grid container lg={12}>\r\n            <Grid item lg={2}>\r\n                <Sidebar />\r\n            </Grid>\r\n            <Grid item lg={10} >\r\n                <HeaderNav changeManageToggle={this.changeManageToggle} />\r\n            </Grid>\r\n            <Grid container item lg={12} justify=\"center\">\r\n                <CssBaseline />\r\n                    {content}\r\n            </Grid>\r\n        </Grid>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nManageRestaurants.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(ManageRestaurants);\r\n\r\n\r\n\r\n","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageOutlets.js",["231","232","233","234","235","236","237","238","239","240"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container,\r\n         makeStyles, withStyles, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport Sidebar from '../shared/Sidebar';\r\nimport HeaderNav from '../shared/HeaderNav';\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n    table: {\r\n        // minWidth: 650,\r\n      },\r\n    button1: {\r\n        fontSize: 11,\r\n        backgroundColor: '#4798a8',\r\n        color: 'white',\r\n        margin: theme.spacing(1),\r\n    \r\n        '&:hover,&:focus': {\r\n              backgroundColor: '#396880',\r\n            }, \r\n    },\r\n    button2: {\r\n        fontSize: 11,\r\n        backgroundColor: '#cf4a4a',\r\n        color: 'white',\r\n        margin: theme.spacing(1),\r\n\r\n        '&:hover,&:focus': {\r\n            backgroundColor: '#b53535',\r\n          }, \r\n    }\r\n  });\r\n\r\n\r\nclass ManageOutlets extends React.Component {\r\n\r\n//   const classes = useStyles();\r\n\r\n    state = {\r\n        outletToAdd : {\r\n            outlet_name: '',\r\n            outlet_location : \"london\",\r\n            restaurant_id : \"a01c1a90-9e01-4549-942e-cf3c00376089\",\r\n        },\r\n        outletToEdit: null,\r\n        outletToDelete: null,\r\n        outlets: [],\r\n        manageToggle: 'add'\r\n    }\r\n\r\n    componentDidMount() {\r\n      axios.post(\"http://divyansh.zapto.org:3000/outlet/fetchall\", { restaurant_id : \"a01c1a90-9e01-4549-942e-cf3c00376089\"})\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              outlets: result.data\r\n            });\r\n          },\r\n          (response) => {console.log(response.data)},\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n\r\n    changeManageToggle = (manageToggle) => {\r\n        this.setState({ manageToggle : manageToggle })\r\n    }\r\n\r\n\r\n    handleAddChange = (event) => {\r\n        var val = event.target.name !== 'nonVeg' ? event.target.value : event.target.checked; \r\n        var temp = this.state.outletToAdd;\r\n        temp[event.target.name] = val\r\n        this.setState({outletToAdd: temp});\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleAddSubmit = (e) => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/outlet/new',\r\n            data: this.state.outletToAdd,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n        e.preventDefault();    \r\n    }\r\n\r\n    handleEditState = (outletToEdit) => {\r\n        this.setState({outletToEdit: outletToEdit})\r\n    }\r\n\r\n    handleEditChange = (event) => {\r\n        var val = event.target.value; \r\n        var temp = this.state.outletToEdit;\r\n        temp[event.target.name] = val\r\n        this.setState({outletToEdit: temp});\r\n        console.log(this.state.outletToEdit)\r\n    }\r\n\r\n    handleEditSave = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/outlet/update',\r\n            data: this.state.outletToEdit,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n                alert(JSON.stringify(response.data));\r\n\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n        // e.preventDefault(); \r\n\r\n\r\n        this.setState({outletToEdit: null})\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        // console.log(id)\r\n        axios({\r\n            method: 'delete',\r\n            url: `http://divyansh.zapto.org:3000/outlet/delete/${id}`,\r\n            // data: this.state.outletToEdit,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(response => {\r\n                //handle success\r\n                console.log(response.data);\r\n                this.setState({outlets: [...this.state.outlets.filter(outlet => outlet.outlet_id!==id)]})\r\n                // alert(JSON.stringify(response.data));\r\n                return this.state.outlets;\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n            \r\n    }\r\n\r\n    buttonToggle = (row, classes) => {\r\n        if(this.state.outletToEdit != null && this.state.outletToEdit.outlet_id==row.outlet_id ){\r\n            return(\r\n            <TableRow key={row.outlet_id} onChange={this.handleEditChange}>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.outlet_name} name=\"outlet_name\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.outlet_location} name=\"outlet_location\"/></TableCell>\r\n            <TableCell align=\"left\" style={{width: 250}}>\r\n            <Button variant=\"contained\" size=\"small\" className={classes.button1} startIcon={<SaveIcon />}  onClick={() => {this.handleEditSave()}}>Save</Button>\r\n            <Button variant=\"contained\"  size=\"small\" className={classes.button2} startIcon={<DeleteIcon />} onClick={() => {this.handleDelete(row.outlet_id)}}>Delete</Button>\r\n            </TableCell>\r\n            </TableRow>\r\n            )\r\n        } else {\r\n            return(\r\n            <TableRow key={row.outlet_id}>\r\n                    <TableCell align=\"left\">{row.outlet_name}</TableCell>\r\n                    <TableCell align=\"left\">{row.outlet_location}</TableCell>\r\n                    <TableCell align=\"left\" style={{width: 250}}>\r\n                    <Button variant=\"contained\" size=\"small\" className={classes.button1} startIcon={<SaveIcon />} onClick={() => {this.handleEditState(row)}}>Edit</Button>\r\n                    <Button variant=\"contained\"  size=\"small\" className={classes.button2} startIcon={<DeleteIcon />} onClick={() => {this.handleDelete(row.outlet_id)}}>Delete</Button>\r\n                    </TableCell>\r\n                </TableRow>)\r\n        }\r\n    }; \r\n  \r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    var content;\r\n\r\n    if (this.state.manageToggle == \"add\"){\r\n        content = \r\n       ( \r\n        <Container maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n            {/* <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar> */}\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Add Outlets\r\n            </Typography>\r\n\r\n            <form className={classes.form} onChange={this.handleAddChange} onSubmit={this.handleAddSubmit} noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        autoComplete=\"outlet_name\"\r\n                        name=\"outlet_name\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"outlet_name\"\r\n                        label=\"Outlet Name\"\r\n                        autoFocus\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"outlet_location\"\r\n                        label=\"Outlet Location\"\r\n                        name=\"outlet_location\"\r\n                        autoComplete=\"outlet_location\"\r\n                    />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </form>\r\n        \r\n        </div>\r\n        </Container> )\r\n    }\r\n\r\n    else if(this.state.manageToggle == \"edit\") {\r\n\r\n        \r\n        \r\n        content =\r\n        <TableContainer  component={Paper} style={{maxWidth: 600}}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"left\">Outlet Name</TableCell>\r\n                        <TableCell align=\"left\">Outlet Location</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {this.state.outlets.map((row) => (\r\n                        this.buttonToggle(row, classes)\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    }\r\n\r\n    else {\r\n        content = <p>Please select Add outlet/ Edit outlet</p>\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n        <Grid container lg={12}>\r\n            <Grid item lg={2}>\r\n                <Sidebar />\r\n            </Grid>\r\n            <Grid item lg={10} >\r\n                <HeaderNav changeManageToggle={this.changeManageToggle} />\r\n            </Grid>\r\n            <Grid container item lg={12} justify=\"center\">\r\n                <CssBaseline />\r\n                    {content}\r\n            </Grid>\r\n        </Grid>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nManageOutlets.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(ManageOutlets);\r\n\r\n\r\n\r\n","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageEmployees.js",["241","242","243","244","245","246","247","248","249","250"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container,\r\n         makeStyles, withStyles, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport Sidebar from '../shared/Sidebar';\r\nimport HeaderNav from '../shared/HeaderNav';\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n    table: {\r\n        // minWidth: 650,\r\n      },\r\n    button1: {\r\n        fontSize: 11,\r\n        backgroundColor: '#4798a8',\r\n        color: 'white',\r\n        margin: theme.spacing(1),\r\n    \r\n        '&:hover,&:focus': {\r\n              backgroundColor: '#396880',\r\n            }, \r\n    },\r\n    button2: {\r\n        fontSize: 11,\r\n        backgroundColor: '#cf4a4a',\r\n        color: 'white',\r\n        margin: theme.spacing(1),\r\n\r\n        '&:hover,&:focus': {\r\n            backgroundColor: '#b53535',\r\n          }, \r\n    }\r\n  });\r\n\r\n\r\nclass ManageEmployees extends React.Component {\r\n\r\n//   const classes = useStyles();\r\n\r\n    state = {\r\n        employeeToAdd : {\r\n            employee_name: '',\r\n            phone : '',\r\n            age : '',\r\n            gender : '',\r\n            employee_dob : '',\r\n            category : 'server',\r\n            outlet_id : \"3d75bccf-647a-47bb-8f47-9933a068a91a\",\r\n        },\r\n        employeeToEdit: null,\r\n        employeeToDelete: null,\r\n        employees: [],\r\n        manageToggle: 'add'\r\n    }\r\n\r\n    componentDidMount() {\r\n      axios.post(\"http://divyansh.zapto.org:3000/employee/fetchall\", {outlet_id : \"3d75bccf-647a-47bb-8f47-9933a068a91a\"})\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              employees: result.data\r\n            });\r\n          },\r\n          (response) => {console.log(response.data)},\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n\r\n    changeManageToggle = (manageToggle) => {\r\n        this.setState({ manageToggle : manageToggle })\r\n    }\r\n\r\n\r\n    handleAddChange = (event) => {\r\n        var val = event.target.name !== 'nonVeg' ? event.target.value : event.target.checked; \r\n        var temp = this.state.employeeToAdd;\r\n        temp[event.target.name] = val\r\n        this.setState({employeeToAdd: temp});\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleAddSubmit = (e) => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/employee/new',\r\n            data: this.state.employeeToAdd,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n        e.preventDefault();    \r\n    }\r\n\r\n    handleEditState = (employeeToEdit) => {\r\n        this.setState({employeeToEdit: employeeToEdit})\r\n    }\r\n\r\n    handleEditChange = (event) => {\r\n        var val = event.target.value; \r\n        var temp = this.state.employeeToEdit;\r\n        temp[event.target.name] = val\r\n        this.setState({employeeToEdit: temp});\r\n        console.log(this.state.employeeToEdit)\r\n    }\r\n\r\n    handleEditSave = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/employee/update',\r\n            data: this.state.employeeToEdit,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n                alert(JSON.stringify(response.data));\r\n\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n        // e.preventDefault(); \r\n\r\n\r\n        this.setState({employeeToEdit: null})\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        // console.log(id)\r\n        axios({\r\n            method: 'delete',\r\n            url: `http://divyansh.zapto.org:3000/employee/delete/${id}`,\r\n            // data: this.state.employeeToEdit,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(response => {\r\n                //handle success\r\n                console.log(response.data);\r\n                this.setState({employees: [...this.state.employees.filter(employee => employee.employee_id!==id)]})\r\n                // alert(JSON.stringify(response.data));\r\n                return this.state.employees;\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n            \r\n    }\r\n\r\n    buttonToggle = (row, classes) => {\r\n        if(this.state.employeeToEdit != null && this.state.employeeToEdit.employee_id==row.employee_id ){\r\n            return(\r\n            <TableRow key={row.employee_id} onChange={this.handleEditChange}>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.employee_name} name=\"employee_name\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.phone} name=\"phone\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.age} name=\"age\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.gender} name=\"gender\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.employee_dob} name=\"employee_dob\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.category} name=\"category\"/></TableCell>\r\n            <TableCell align=\"left\" style={{width: 250}}>\r\n            <Button variant=\"contained\" size=\"small\" className={classes.button1} startIcon={<SaveIcon />}  onClick={() => {this.handleEditSave()}}>Save</Button>\r\n            <Button variant=\"contained\"  size=\"small\" className={classes.button2} startIcon={<DeleteIcon />} onClick={() => {this.handleDelete(row.employee_id)}}>Delete</Button>\r\n            </TableCell>\r\n            </TableRow>\r\n            )\r\n        } else {\r\n            return(\r\n            <TableRow key={row.employee_id}>\r\n                    <TableCell align=\"left\">{row.employee_name}</TableCell>\r\n                    <TableCell align=\"left\">{row.phone}</TableCell>\r\n                    <TableCell align=\"left\">{row.age}</TableCell>\r\n                    <TableCell align=\"left\">{row.gender}</TableCell>\r\n                    <TableCell align=\"left\">{row.emloyee_dob}</TableCell>\r\n                    <TableCell align=\"left\">{row.category}</TableCell>\r\n                    <TableCell align=\"left\" style={{width: 250}}>\r\n                    <Button variant=\"contained\" size=\"small\" className={classes.button1} startIcon={<SaveIcon />} onClick={() => {this.handleEditState(row)}}>Edit</Button>\r\n                    <Button variant=\"contained\"  size=\"small\" className={classes.button2} startIcon={<DeleteIcon />} onClick={() => {this.handleDelete(row.employee_id)}}>Delete</Button>\r\n                    </TableCell>\r\n                </TableRow>)\r\n        }\r\n    }; \r\n  \r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    var content;\r\n\r\n    if (this.state.manageToggle == \"add\"){\r\n        content = \r\n       ( \r\n        <Container maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n            {/* <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar> */}\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Add Employees\r\n            </Typography>\r\n\r\n            <form className={classes.form} onChange={this.handleAddChange} onSubmit={this.handleAddSubmit} noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        autoComplete=\"employee_name\"\r\n                        name=\"employee_name\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"employee_name\"\r\n                        label=\"Employee Name\"\r\n                        autoFocus\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"phone\"\r\n                        label=\"Contact Number\"\r\n                        name=\"phone\"\r\n                        autoComplete=\"phone\"\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"age\"\r\n                        label=\"Age\"\r\n                        name=\"age\"\r\n                        autoComplete=\"age\"\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"gender\"\r\n                        label=\"Gender\"\r\n                        name=\"gender\"\r\n                        autoComplete=\"gender\"\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"employee_dob\"\r\n                        label=\"Date of Birth\"\r\n                        name=\"employee_dob\"\r\n                        autoComplete=\"employee_dob\"\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"category\"\r\n                        label=\"Role\"\r\n                        name=\"category\"\r\n                        autoComplete=\"category\"\r\n                    />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </form>\r\n        \r\n        </div>\r\n        </Container> )\r\n    }\r\n\r\n    else if(this.state.manageToggle == \"edit\") {\r\n\r\n        \r\n        \r\n        content =\r\n        <TableContainer  component={Paper} style={{maxWidth: 600}}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"left\">Employee Name</TableCell>\r\n                        <TableCell align=\"left\">Contact Number</TableCell>\r\n                        <TableCell align=\"left\">Age</TableCell>\r\n                        <TableCell align=\"left\">Gender</TableCell>\r\n                        <TableCell align=\"left\">Date of Birth</TableCell>\r\n                        <TableCell align=\"left\">Role</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {this.state.employees.map((row) => (\r\n                        this.buttonToggle(row, classes)\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    }\r\n\r\n    else {\r\n        content = <p>Please select Add Employee/ Edit Employee</p>\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n        <Grid container lg={12}>\r\n            <Grid item lg={2}>\r\n                <Sidebar />\r\n            </Grid>\r\n            <Grid item lg={10} >\r\n                <HeaderNav changeManageToggle={this.changeManageToggle} />\r\n            </Grid>\r\n            <Grid container item lg={12} justify=\"center\">\r\n                <CssBaseline />\r\n                    {content}\r\n            </Grid>\r\n        </Grid>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nManageEmployees.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(ManageEmployees);\r\n\r\n\r\n\r\n","D:\\Web Projects\\inventory\\src\\components\\Manage\\ManageCustomers.js",["251","252","253","254","255","256","257","258","259","260"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Grid, Box, Typography, Container,\r\n         makeStyles, withStyles, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport Sidebar from '../shared/Sidebar';\r\nimport HeaderNav from '../shared/HeaderNav';\r\n\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n    table: {\r\n        // minWidth: 650,\r\n      },\r\n    button1: {\r\n        fontSize: 11,\r\n        backgroundColor: '#4798a8',\r\n        color: 'white',\r\n        margin: theme.spacing(1),\r\n    \r\n        '&:hover,&:focus': {\r\n              backgroundColor: '#396880',\r\n            }, \r\n    },\r\n    button2: {\r\n        fontSize: 11,\r\n        backgroundColor: '#cf4a4a',\r\n        color: 'white',\r\n        margin: theme.spacing(1),\r\n\r\n        '&:hover,&:focus': {\r\n            backgroundColor: '#b53535',\r\n          }, \r\n    }\r\n  });\r\n\r\n\r\nclass ManageCustomers extends React.Component {\r\n\r\n//   const classes = useStyles();\r\n\r\n    state = {\r\n        customerToAdd : {\r\n            customer_name: '',\r\n            customer_phone : '',\r\n            customer_email : '',\r\n            customer_category : '',\r\n            outlet_id : \"3d75bccf-647a-47bb-8f47-9933a068a91a\",\r\n            customer_id : \"2280ddba-4981-4ae1-8ab0-6e2c139ebdc0\", \r\n        },\r\n        customerToEdit: null,\r\n        customerToDelete: null,\r\n        customers: [],\r\n        manageToggle: 'add'\r\n    }\r\n\r\n    componentDidMount() {\r\n        var outletid = this.state.customerToAdd.customer_id;\r\n      axios.post(`http://divyansh.zapto.org:3000/customer/fetchall/customer/${outletid}`)\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              customers: result.data\r\n            });\r\n          },\r\n          (response) => {console.log(response.data)},\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n\r\n    changeManageToggle = (manageToggle) => {\r\n        this.setState({ manageToggle : manageToggle })\r\n    }\r\n\r\n\r\n    handleAddChange = (event) => {\r\n        var val = event.target.name !== 'nonVeg' ? event.target.value : event.target.checked; \r\n        var temp = this.state.customerToAdd;\r\n        temp[event.target.name] = val\r\n        this.setState({customerToAdd: temp});\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleAddSubmit = (e) => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/customer/new',\r\n            data: this.state.customerToAdd,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n        e.preventDefault();    \r\n    }\r\n\r\n    handleEditState = (customerToEdit) => {\r\n        this.setState({customerToEdit: customerToEdit})\r\n    }\r\n\r\n    handleEditChange = (event) => {\r\n        var val = event.target.value; \r\n        var temp = this.state.customerToEdit;\r\n        temp[event.target.name] = val\r\n        this.setState({customerToEdit: temp});\r\n        console.log(this.state.customerToEdit)\r\n    }\r\n\r\n    handleEditSave = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://divyansh.zapto.org:3000/customer/update',\r\n            data: this.state.customerToEdit,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(response.data);\r\n                alert(JSON.stringify(response.data));\r\n\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n        // e.preventDefault(); \r\n\r\n\r\n        this.setState({customerToEdit: null})\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        // console.log(id)\r\n        axios({\r\n            method: 'delete',\r\n            url: `http://divyansh.zapto.org:3000/customer/delete/${id}`,\r\n            // data: this.state.customerToEdit,\r\n            headers: {'Content-Type': 'application/json' }\r\n            })\r\n            .then(response => {\r\n                //handle success\r\n                console.log(response.data);\r\n                this.setState({customers: [...this.state.customers.filter(customer => customer.customer_id!==id)]})\r\n                // alert(JSON.stringify(response.data));\r\n                return this.state.customers;\r\n            })\r\n            .catch(function (response) {\r\n                //handle error\r\n                console.log(response);\r\n            }); \r\n            \r\n    }\r\n\r\n    buttonToggle = (row, classes) => {\r\n        if(this.state.customerToEdit != null && this.state.customerToEdit.customer_id==row.customer_id ){\r\n            return(\r\n            <TableRow key={row.customer_id} onChange={this.handleEditChange}>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.customer_name} name=\"customer_name\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.customer_phone} name=\"customer_phone\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.customer_email} name=\"customer_email\"/></TableCell>\r\n            <TableCell align=\"left\"><TextField defaultValue={row.customer_category} name=\"customer_category\"/></TableCell>\r\n            <TableCell align=\"left\" style={{width: 250}}>\r\n            <Button variant=\"contained\" size=\"small\" className={classes.button1} startIcon={<SaveIcon />}  onClick={() => {this.handleEditSave()}}>Save</Button>\r\n            <Button variant=\"contained\"  size=\"small\" className={classes.button2} startIcon={<DeleteIcon />} onClick={() => {this.handleDelete(row.customer_id)}}>Delete</Button>\r\n            </TableCell>\r\n            </TableRow>\r\n            )\r\n        } else {\r\n            return(\r\n            <TableRow key={row.customer_id}>\r\n                    <TableCell align=\"left\">{row.customer_name}</TableCell>\r\n                    <TableCell align=\"left\">{row.customer_phone}</TableCell>\r\n                    <TableCell align=\"left\">{row.customer_email}</TableCell>\r\n                    <TableCell align=\"left\">{row.customer_category}</TableCell>\r\n                    <TableCell align=\"left\" style={{width: 250}}>\r\n                    <Button variant=\"contained\" size=\"small\" className={classes.button1} startIcon={<SaveIcon />} onClick={() => {this.handleEditState(row)}}>Edit</Button>\r\n                    <Button variant=\"contained\"  size=\"small\" className={classes.button2} startIcon={<DeleteIcon />} onClick={() => {this.handleDelete(row.customer_id)}}>Delete</Button>\r\n                    </TableCell>\r\n                </TableRow>)\r\n        }\r\n    }; \r\n  \r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    var content;\r\n\r\n    if (this.state.manageToggle == \"add\"){\r\n        content = \r\n       ( \r\n        <Container maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n            {/* <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n            </Avatar> */}\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Add customers\r\n            </Typography>\r\n\r\n            <form className={classes.form} onChange={this.handleAddChange} onSubmit={this.handleAddSubmit} noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        autoComplete=\"customer_name\"\r\n                        name=\"customer_name\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"customer_name\"\r\n                        label=\"Customer Name\"\r\n                        autoFocus\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"customer_phone\"\r\n                        label=\"Contact Number\"\r\n                        name=\"customer_phone\"\r\n                        autoComplete=\"customer_phone\"\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"customer_email\"\r\n                        label=\"Email\"\r\n                        name=\"customer_email\"\r\n                        autoComplete=\"email\"\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"customer_category\"\r\n                        label=\"Category\"\r\n                        name=\"customer_category\"\r\n                        autoComplete=\"customer_category\"\r\n                    />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </form>\r\n        \r\n        </div>\r\n        </Container> )\r\n    }\r\n\r\n    else if(this.state.manageToggle == \"edit\") {\r\n\r\n        \r\n        \r\n        content =\r\n        <TableContainer  component={Paper} style={{maxWidth: 600}}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"left\">Customer Name</TableCell>\r\n                        <TableCell align=\"left\">Phone</TableCell>\r\n                        <TableCell align=\"left\">Email</TableCell>\r\n                        <TableCell align=\"left\">Role</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {this.state.customers.map((row) => (\r\n                        this.buttonToggle(row, classes)\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n\r\n    }\r\n\r\n    else {\r\n        content = <p>Please select Add Customer/ Edit Customer</p>\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n        <Grid container lg={12}>\r\n            <Grid item lg={2}>\r\n                <Sidebar />\r\n            </Grid>\r\n            <Grid item lg={10} >\r\n                <HeaderNav changeManageToggle={this.changeManageToggle} />\r\n            </Grid>\r\n            <Grid container item lg={12} justify=\"center\">\r\n                <CssBaseline />\r\n                    {content}\r\n            </Grid>\r\n        </Grid>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nManageCustomers.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(ManageCustomers);\r\n\r\n\r\n\r\n","D:\\Web Projects\\inventory\\src\\components\\Layout\\ManageLayout.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":17},{"ruleId":"288","severity":1,"message":"292","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":14},{"ruleId":"284","replacedBy":"293"},{"ruleId":"286","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":7,"column":5,"nodeType":"297","messageId":"298","endLine":9,"endColumn":8},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":19},{"ruleId":"288","severity":1,"message":"300","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":16},{"ruleId":"288","severity":1,"message":"301","line":3,"column":78,"nodeType":"290","messageId":"291","endLine":3,"endColumn":82},{"ruleId":"288","severity":1,"message":"302","line":3,"column":90,"nodeType":"290","messageId":"291","endLine":3,"endColumn":93},{"ruleId":"288","severity":1,"message":"303","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":20},{"ruleId":"288","severity":1,"message":"304","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":24},{"ruleId":"288","severity":1,"message":"305","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":20},{"ruleId":"306","severity":1,"message":"307","line":186,"column":74,"nodeType":"308","messageId":"309","endLine":186,"endColumn":76},{"ruleId":"306","severity":1,"message":"307","line":222,"column":33,"nodeType":"308","messageId":"309","endLine":222,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":315,"column":37,"nodeType":"308","messageId":"309","endLine":315,"endColumn":39},{"ruleId":"288","severity":1,"message":"310","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":14},{"ruleId":"288","severity":1,"message":"311","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":18},{"ruleId":"288","severity":1,"message":"312","line":14,"column":8,"nodeType":"290","messageId":"291","endLine":14,"endColumn":16},{"ruleId":"288","severity":1,"message":"313","line":15,"column":8,"nodeType":"290","messageId":"291","endLine":15,"endColumn":16},{"ruleId":"288","severity":1,"message":"314","line":16,"column":8,"nodeType":"290","messageId":"291","endLine":16,"endColumn":15},{"ruleId":"288","severity":1,"message":"315","line":17,"column":8,"nodeType":"290","messageId":"291","endLine":17,"endColumn":18},{"ruleId":"316","severity":1,"message":"317","line":58,"column":5,"nodeType":"318","messageId":"309","endLine":58,"endColumn":15},{"ruleId":"288","severity":1,"message":"319","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":20},{"ruleId":"288","severity":1,"message":"320","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":16},{"ruleId":"288","severity":1,"message":"321","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":17},{"ruleId":"288","severity":1,"message":"322","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":18},{"ruleId":"288","severity":1,"message":"323","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"288","severity":1,"message":"324","line":12,"column":8,"nodeType":"290","messageId":"291","endLine":12,"endColumn":18},{"ruleId":"288","severity":1,"message":"325","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":18},{"ruleId":"288","severity":1,"message":"326","line":14,"column":8,"nodeType":"290","messageId":"291","endLine":14,"endColumn":18},{"ruleId":"288","severity":1,"message":"327","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":24},{"ruleId":"288","severity":1,"message":"328","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":16},{"ruleId":"288","severity":1,"message":"302","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":11},{"ruleId":"288","severity":1,"message":"303","line":16,"column":10,"nodeType":"290","messageId":"291","endLine":16,"endColumn":20},{"ruleId":"288","severity":1,"message":"300","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":14},{"ruleId":"288","severity":1,"message":"329","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":14},{"ruleId":"288","severity":1,"message":"330","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":12},{"ruleId":"288","severity":1,"message":"331","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":16},{"ruleId":"288","severity":1,"message":"332","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":14},{"ruleId":"288","severity":1,"message":"311","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":18},{"ruleId":"288","severity":1,"message":"301","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":12},{"ruleId":"288","severity":1,"message":"313","line":11,"column":8,"nodeType":"290","messageId":"291","endLine":11,"endColumn":16},{"ruleId":"288","severity":1,"message":"333","line":12,"column":8,"nodeType":"290","messageId":"291","endLine":12,"endColumn":25},{"ruleId":"288","severity":1,"message":"314","line":15,"column":8,"nodeType":"290","messageId":"291","endLine":15,"endColumn":15},{"ruleId":"288","severity":1,"message":"334","line":16,"column":8,"nodeType":"290","messageId":"291","endLine":16,"endColumn":15},{"ruleId":"288","severity":1,"message":"315","line":17,"column":8,"nodeType":"290","messageId":"291","endLine":17,"endColumn":18},{"ruleId":"288","severity":1,"message":"335","line":45,"column":20,"nodeType":"290","messageId":"291","endLine":45,"endColumn":34},{"ruleId":"288","severity":1,"message":"336","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"303","line":5,"column":95,"nodeType":"290","messageId":"291","endLine":5,"endColumn":105},{"ruleId":"288","severity":1,"message":"337","line":5,"column":115,"nodeType":"290","messageId":"291","endLine":5,"endColumn":122},{"ruleId":"295","severity":1,"message":"296","line":17,"column":3,"nodeType":"297","messageId":"298","endLine":20,"endColumn":4},{"ruleId":"288","severity":1,"message":"336","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"299","line":5,"column":16,"nodeType":"290","messageId":"291","endLine":5,"endColumn":25},{"ruleId":"288","severity":1,"message":"338","line":5,"column":27,"nodeType":"290","messageId":"291","endLine":5,"endColumn":32},{"ruleId":"306","severity":1,"message":"307","line":65,"column":74,"nodeType":"308","messageId":"309","endLine":65,"endColumn":76},{"ruleId":"306","severity":1,"message":"339","line":65,"column":81,"nodeType":"308","messageId":"309","endLine":65,"endColumn":83},{"ruleId":"306","severity":1,"message":"339","line":90,"column":38,"nodeType":"308","messageId":"309","endLine":90,"endColumn":40},{"ruleId":"306","severity":1,"message":"339","line":90,"column":70,"nodeType":"308","messageId":"309","endLine":90,"endColumn":72},{"ruleId":"306","severity":1,"message":"339","line":94,"column":39,"nodeType":"308","messageId":"309","endLine":94,"endColumn":41},{"ruleId":"306","severity":1,"message":"339","line":94,"column":73,"nodeType":"308","messageId":"309","endLine":94,"endColumn":75},{"ruleId":"306","severity":1,"message":"307","line":95,"column":77,"nodeType":"308","messageId":"309","endLine":95,"endColumn":79},{"ruleId":"288","severity":1,"message":"327","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":24},{"ruleId":"288","severity":1,"message":"328","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":16},{"ruleId":"288","severity":1,"message":"302","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":11},{"ruleId":"288","severity":1,"message":"303","line":16,"column":10,"nodeType":"290","messageId":"291","endLine":16,"endColumn":20},{"ruleId":"288","severity":1,"message":"327","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":24},{"ruleId":"288","severity":1,"message":"328","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":16},{"ruleId":"288","severity":1,"message":"302","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":11},{"ruleId":"288","severity":1,"message":"303","line":16,"column":10,"nodeType":"290","messageId":"291","endLine":16,"endColumn":20},{"ruleId":"288","severity":1,"message":"327","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":24},{"ruleId":"288","severity":1,"message":"328","line":10,"column":8,"nodeType":"290","messageId":"291","endLine":10,"endColumn":16},{"ruleId":"288","severity":1,"message":"302","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":11},{"ruleId":"288","severity":1,"message":"303","line":16,"column":10,"nodeType":"290","messageId":"291","endLine":16,"endColumn":20},{"ruleId":"288","severity":1,"message":"300","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":16},{"ruleId":"288","severity":1,"message":"327","line":3,"column":50,"nodeType":"290","messageId":"291","endLine":3,"endColumn":66},{"ruleId":"288","severity":1,"message":"328","line":3,"column":68,"nodeType":"290","messageId":"291","endLine":3,"endColumn":76},{"ruleId":"288","severity":1,"message":"301","line":3,"column":78,"nodeType":"290","messageId":"291","endLine":3,"endColumn":82},{"ruleId":"288","severity":1,"message":"302","line":3,"column":90,"nodeType":"290","messageId":"291","endLine":3,"endColumn":93},{"ruleId":"288","severity":1,"message":"303","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":20},{"ruleId":"288","severity":1,"message":"304","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":181,"column":92,"nodeType":"308","messageId":"309","endLine":181,"endColumn":94},{"ruleId":"306","severity":1,"message":"307","line":209,"column":33,"nodeType":"308","messageId":"309","endLine":209,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":251,"column":37,"nodeType":"308","messageId":"309","endLine":251,"endColumn":39},{"ruleId":"288","severity":1,"message":"300","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":16},{"ruleId":"288","severity":1,"message":"327","line":3,"column":50,"nodeType":"290","messageId":"291","endLine":3,"endColumn":66},{"ruleId":"288","severity":1,"message":"328","line":3,"column":68,"nodeType":"290","messageId":"291","endLine":3,"endColumn":76},{"ruleId":"288","severity":1,"message":"301","line":3,"column":78,"nodeType":"290","messageId":"291","endLine":3,"endColumn":82},{"ruleId":"288","severity":1,"message":"302","line":3,"column":90,"nodeType":"290","messageId":"291","endLine":3,"endColumn":93},{"ruleId":"288","severity":1,"message":"303","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":20},{"ruleId":"288","severity":1,"message":"304","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":182,"column":80,"nodeType":"308","messageId":"309","endLine":182,"endColumn":82},{"ruleId":"306","severity":1,"message":"307","line":212,"column":33,"nodeType":"308","messageId":"309","endLine":212,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":265,"column":37,"nodeType":"308","messageId":"309","endLine":265,"endColumn":39},{"ruleId":"288","severity":1,"message":"300","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":16},{"ruleId":"288","severity":1,"message":"327","line":3,"column":50,"nodeType":"290","messageId":"291","endLine":3,"endColumn":66},{"ruleId":"288","severity":1,"message":"328","line":3,"column":68,"nodeType":"290","messageId":"291","endLine":3,"endColumn":76},{"ruleId":"288","severity":1,"message":"301","line":3,"column":78,"nodeType":"290","messageId":"291","endLine":3,"endColumn":82},{"ruleId":"288","severity":1,"message":"302","line":3,"column":90,"nodeType":"290","messageId":"291","endLine":3,"endColumn":93},{"ruleId":"288","severity":1,"message":"303","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":20},{"ruleId":"288","severity":1,"message":"304","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":186,"column":86,"nodeType":"308","messageId":"309","endLine":186,"endColumn":88},{"ruleId":"306","severity":1,"message":"307","line":224,"column":33,"nodeType":"308","messageId":"309","endLine":224,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":321,"column":37,"nodeType":"308","messageId":"309","endLine":321,"endColumn":39},{"ruleId":"288","severity":1,"message":"300","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":16},{"ruleId":"288","severity":1,"message":"327","line":3,"column":50,"nodeType":"290","messageId":"291","endLine":3,"endColumn":66},{"ruleId":"288","severity":1,"message":"328","line":3,"column":68,"nodeType":"290","messageId":"291","endLine":3,"endColumn":76},{"ruleId":"288","severity":1,"message":"301","line":3,"column":78,"nodeType":"290","messageId":"291","endLine":3,"endColumn":82},{"ruleId":"288","severity":1,"message":"302","line":3,"column":90,"nodeType":"290","messageId":"291","endLine":3,"endColumn":93},{"ruleId":"288","severity":1,"message":"303","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":20},{"ruleId":"288","severity":1,"message":"304","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":24},{"ruleId":"306","severity":1,"message":"307","line":186,"column":86,"nodeType":"308","messageId":"309","endLine":186,"endColumn":88},{"ruleId":"306","severity":1,"message":"307","line":220,"column":33,"nodeType":"308","messageId":"309","endLine":220,"endColumn":35},{"ruleId":"306","severity":1,"message":"307","line":295,"column":37,"nodeType":"308","messageId":"309","endLine":295,"endColumn":39},{"ruleId":"288","severity":1,"message":"336","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":17},{"ruleId":"288","severity":1,"message":"300","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":16},{"ruleId":"288","severity":1,"message":"329","line":3,"column":18,"nodeType":"290","messageId":"291","endLine":3,"endColumn":24},{"ruleId":"288","severity":1,"message":"340","line":3,"column":39,"nodeType":"290","messageId":"291","endLine":3,"endColumn":48},{"ruleId":"288","severity":1,"message":"327","line":3,"column":50,"nodeType":"290","messageId":"291","endLine":3,"endColumn":66},{"ruleId":"288","severity":1,"message":"328","line":3,"column":68,"nodeType":"290","messageId":"291","endLine":3,"endColumn":76},{"ruleId":"288","severity":1,"message":"301","line":3,"column":78,"nodeType":"290","messageId":"291","endLine":3,"endColumn":82},{"ruleId":"288","severity":1,"message":"302","line":3,"column":90,"nodeType":"290","messageId":"291","endLine":3,"endColumn":93},{"ruleId":"288","severity":1,"message":"315","line":3,"column":95,"nodeType":"290","messageId":"291","endLine":3,"endColumn":105},{"ruleId":"288","severity":1,"message":"303","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":20},{"ruleId":"288","severity":1,"message":"341","line":4,"column":22,"nodeType":"290","messageId":"291","endLine":4,"endColumn":31},{"ruleId":"288","severity":1,"message":"342","line":4,"column":33,"nodeType":"290","messageId":"291","endLine":4,"endColumn":43},{"ruleId":"288","severity":1,"message":"338","line":4,"column":45,"nodeType":"290","messageId":"291","endLine":4,"endColumn":50},{"ruleId":"288","severity":1,"message":"343","line":4,"column":52,"nodeType":"290","messageId":"291","endLine":4,"endColumn":66},{"ruleId":"288","severity":1,"message":"344","line":4,"column":68,"nodeType":"290","messageId":"291","endLine":4,"endColumn":73},{"ruleId":"288","severity":1,"message":"345","line":4,"column":75,"nodeType":"290","messageId":"291","endLine":4,"endColumn":84},{"ruleId":"288","severity":1,"message":"346","line":4,"column":86,"nodeType":"290","messageId":"291","endLine":4,"endColumn":94},{"ruleId":"288","severity":1,"message":"347","line":4,"column":96,"nodeType":"290","messageId":"291","endLine":4,"endColumn":105},{"ruleId":"288","severity":1,"message":"348","line":4,"column":107,"nodeType":"290","messageId":"291","endLine":4,"endColumn":116},{"ruleId":"288","severity":1,"message":"304","line":5,"column":8,"nodeType":"290","messageId":"291","endLine":5,"endColumn":24},{"ruleId":"288","severity":1,"message":"349","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":18},{"ruleId":"288","severity":1,"message":"350","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":16},{"ruleId":"288","severity":1,"message":"351","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":13},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"no-unused-vars","'Navigator' is defined but never used.","Identifier","unusedVar","'Layout' is defined but never used.",["352"],["353"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Container' is defined but never used.","'Avatar' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'ManageLayout' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AppBar' is defined but never used.","'IconButton' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","'ListItemIcon' is defined but never used.","'Collapse' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'StarBorder' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'HelpIcon' is defined but never used.","'Hidden' is defined but never used.","'NotificationsIcon' is defined but never used.","'Tooltip' is defined but never used.","'onDrawerToggle' is assigned a value but never used.","'PropTypes' is defined but never used.","'Divider' is defined but never used.","'Paper' is defined but never used.","Expected '!==' and instead saw '!='.","'TextField' is defined but never used.","'useStyles' is defined but never used.","'withStyles' is defined but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'TableBody' is defined but never used.","'DeleteIcon' is defined but never used.","'SaveIcon' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]